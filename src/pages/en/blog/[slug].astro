---
import { getCollection, type CollectionEntry } from 'astro:content';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import BlogLangSwitch from '../../../components/BlogLangSwitch.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog', ({ data }) => data.language === 'en' && data.draft !== true);
  return posts.map((post) => ({ params: { slug: post.slug } }));
}

const { slug } = Astro.params;

// All published EN posts
const allPosts: CollectionEntry<'blog'>[] = await getCollection(
  'blog',
  ({ data }) => data.language === 'en' && data.draft !== true
);

// Sort by date (newest → oldest)
const sorted = [...allPosts].sort(
  (a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime()
);

// Current post
const postIndex = sorted.findIndex((p) => p.slug === slug);
const post = sorted[postIndex];

if (!post) {
  return Astro.redirect('/en/blog', 302);
}

const newer = postIndex > 0 ? sorted[postIndex - 1] : null;
const older = postIndex < sorted.length - 1 ? sorted[postIndex + 1] : null;

// --- Related posts (same category + overlapping tags) ---
const currentCategory = post.data.category;
const currentTags: string[] = post.data.tags ?? [];

function scoreRelated(p: CollectionEntry<'blog'>): number {
  let s = 0;
  if (p.data.category === currentCategory) s += 2;
  const overlap = (p.data.tags ?? []).filter((t: string) => currentTags.includes(t)).length;
  s += overlap;
  return s;
}

const related: CollectionEntry<'blog'>[] = allPosts
  .filter((p) => p.slug !== slug)
  .map((p) => ({ p, s: scoreRelated(p) }))
  .filter(({ s }) => s > 0)
  .sort(
    (a, b) =>
      b.s - a.s ||
      b.p.data.publishDate.getTime() - a.p.data.publishDate.getTime()
  )
  .slice(0, 3)
  .map(({ p }) => p);

const { Content } = await post.render();
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <div class="blog-container">
    <article class="blog-prose">
      <h1>{post.data.title}</h1>
      <div class="blog-meta">
        <span>Published on {post.data.publishDate.toLocaleDateString('en-GB')}</span>
        <span>— {post.data.category}</span>
      </div>

      <!-- language switch (contextual) -->
      <div style="margin: .5rem 0 1.25rem;">
        <BlogLangSwitch post={post} currentLang="en" />
      </div>

      <Content />

      <div class="blog-divider"></div>

      <!-- pagination -->
      <nav class="blog-nav" aria-label="Post navigation">
        {newer ? (
          <a href={`/en/blog/${newer.slug}/`}>
            <div class="text-xs uppercase opacity-70">Newer</div>
            <div class="font-semibold">{newer.data.title}</div>
          </a>
        ) : <span></span>}

        {older ? (
          <a href={`/en/blog/${older.slug}/`} class="md:text-right">
            <div class="text-xs uppercase opacity-70">Older</div>
            <div class="font-semibold">{older.data.title}</div>
          </a>
        ) : <span></span>}
      </nav>

      {related.length > 0 ? (
        <>
          <h2 style="margin-top:2rem;">Related posts</h2>
          <ul class="related-grid">
            {related.map((r) => (
              <li>
                <a href={`/en/blog/${r.slug}/`} class="related-card">
                  <div class="rel-cat">{r.data.category}</div>
                  <div class="rel-title">{r.data.title}</div>
                  <div class="rel-date">{r.data.publishDate.toLocaleDateString('en-GB')}</div>
                </a>
              </li>
            ))}
          </ul>
        </>
      ) : null}
    </article>
  </div>
</BaseLayout>
